<?xml version="1.0" ?>

<gprconfig>
  <configuration>
   <config>

   type Loaders is ("RAM");

   Loader : Loaders := external ("LOADER", "RAM");

   package Compiler is
     Common_Required_Switches := ("-mlittle-endian", "-mhard-float",
        "-mcpu=cortex-a9", "-mfpu=vfpv3-d16", "-marm");

     Asm_Required_Switches := ();

     for Leading_Required_Switches ("Ada") use
        Compiler'Leading_Required_Switches ("Ada") &amp;
        Common_Required_Switches;

     for Leading_Required_Switches ("C") use
        Compiler'Leading_Required_Switches ("C") &amp;
        Common_Required_Switches;

     for Leading_Required_Switches ("Asm") use
        Compiler'Leading_Required_Switches ("Asm") &amp;
        Common_Required_Switches;

     for Leading_Required_Switches ("Asm2") use
        Compiler'Leading_Required_Switches ("Asm2") &amp;
        Common_Required_Switches;

     for Leading_Required_Switches ("Asm_Cpp") use
        Compiler'Leading_Required_Switches ("Asm_Cpp") &amp;
        Common_Required_Switches &amp;
        Asm_Required_Switches;
   end Compiler;

   package Linker is
      --  Add -L for linker scripts, as some of them use INCLUDE.
      for Required_Switches use Linker'Required_Switches &amp;
        ("-L${RUNTIME_DIR(ada)}/adalib", "-lgnat") &amp;
        Compiler.Common_Required_Switches &amp;
        ("-nostdlib", "-lgcc", "-L${RUNTIME_DIR(ada)}/arch");

      case Loader is
         when "RAM" =>
	    for Required_Switches use Linker'Required_Switches &amp;
	       ("-T", "ram.ld");
       end case;
   end Linker;

   package Binder is
      for Required_Switches ("Ada") use Binder'Required_Switches ("Ada")
        &amp; ("-nostdlib");
   end Binder;
   </config>
  </configuration>
</gprconfig>
