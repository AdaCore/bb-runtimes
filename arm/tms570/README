ARM TMS570 Runtimes
--------------

Runtimes Supported

   ZFP
   Ravenscar-SFP
   Ravenscar-Full

Targets Supported

   Hercules ARM Cortex-R4F 

System Clocks

   Clocks Configuration

   See package System.BB.Parameters (s-bbpara-tms570.ads) in the gnat repository for the clock frequency. Note the system clock frequency must be between 100 KHz and 1 GHz.

Startup Code

   There are two assembly language files for the startup code, one each for executing from RAM or ROM, plus a common file shared by both (e.g., that starts the FPU). These are start-ram.S, start-rom.S, and common.S, respectively.

   When starting from ROM, the file sys_startup.S is used, and branches to an entry defined in start-rom.S. The file sys_startup.S is generated from the Ada file sys_startup_simple.adb and manually modified to issue the branch instruction.

   For the ZFP runtime the crt0.S file is used to initialize the vector table. For the ravenscar-* runtimes, the code in package System.BB.CPU_Primitives (gnat/s-bbcppr-arm.adb) then installs GNAT-specific handlers that raise exceptions for the traps.

Interrupts

   The package Ada.Interrupts.Names is located in the gnat repository (a-intnam-xi-tms570.ads) and is renamed accordingly during packaging.

   See the package body for System.BB.Board_Support (s-bbbosu-tms570.adb) in the gnat repository for board configuration for interrupts.

Memory Layout

   The memory layout is controlled by linker scripts selected by a scenario variable named "Loader". This scenario variable is declared in an xml file (runtime.xml) read by gprbuild automatically and used to define linker switches. These switches specify the linker script corresponding to the scenario value, as follows:

       PROBE   : tms570.ld
       FLASH   : flash.ld
       MONITOR : monitor.ld
       HIRAM   : hiram.ld
       LORAM   : loram.ld

   That there is also a shared linker script named common.ld, used by the flash.ld, hiram.ld, and monitor.ld scripts.

   Note that the Ravenscar-SFP and Ravenscar-Full runtimes have slightly different runtime.xml file content, for the sake of the libraries included in the Ravenscar-Full runtime.

   You can modify all of these scripts as required. Alternatively, these  scripts can be overridden at link time using the LDSCRIPT environment variable.

Resources Used

   The Ravenscar runtime libraries use RTI_Compare_Interrupt_3 interrupt to implement Ada semantics for time, i.e., delay statements and package Ada.Real_Time.  See the package body for System.BB.Board_Support in the tailored file s-bbbosu-tms570.adb.

   The runtime libraries provide a minimal version of package Ada.Text_IO supporting character- and string-based input and output routines. The bodies of the Ada.Text_IO routines call through to a device-specific I/O package named System.Text_IO. Different architectures and different variants of a given board are represented by distinct versions of the package body for this package. The source files are located in the gnat repository, with different file names indicating the target hardware.

   In the basic version I/O goes through the ARM Debug Control Channel (DCC) to the JTAG connector. That version of the package body is in the file named gnat/s-textio-tms570.adb.

   For the TMS570LS31, I/O goes through a UART, the serial communication interface (SCI). That version of the package body is in the file named gnat/s-textio-tms570-sci.adb. You can change the baud rate etc. in that package.
